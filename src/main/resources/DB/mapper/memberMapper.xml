<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 <mapper namespace="com.iu.s5.member.MemberDAO">
 
 <resultMap type="MemberVO" id="loginResult">
 	<id column="id" property="id"/><!--primary key -->
	<result column="pw" property="pw"/> <!-- mpw라는 컬럼이 들어오면 memberVO에 pw를 불러옴 -->
	<result column="name" property="name"/>
	<result column="email" property="email"/>
	<result column="phone" property="phone"/>
	<result column="age" property="age" />
	<!-- 멤버변수내에 자식이 1개인 경우 -->
	<association property="memberFileVO" javaType="MemberFileVO">
		<result column="fileName" property="fileName"/>
		<result column="oriName" property="oriName"/>
	</association><!-- 내부의멤버변수명 -->
 </resultMap>
 
 	<sql id="search">
  		like '%'||#{search}||'%'
  	</sql>
  	
  	<select id="memberCount" parameterType="Pager" resultType="Long">
  		select count(id) from member
  <where>
  			<if test="kind == 'id'">
  				ID <include refid="search"></include>
  			</if>
  			
  			<if test="kind == 'na'">
  				NAME <include refid="search"></include>
  			</if>
  			
  			<if test="kind == 'ph'">
  				PHONE <include refid="search"></include>
  			</if>
  			
  			<if test="kind == 'em'">
  				EMAIL <include refid="search"></include>
  			</if>
  		</where>
  		
  	</select>
  	
  	
  	<select id="memberList" parameterType="Pager" resultType="MemberVO">
  	select * from(select N.*, rownum R from(select * from member where 
	<choose>
		<when test="kind=='id'">
			ID
		</when>
		<when test="kind=='na'">
			NAME
		</when>
		<when test="kind=='ph'">
			PHONE
		</when>
		<otherwise>
			EMAIL
		</otherwise>
	</choose>
	like '%'||#{search}||'%') N)where R between #{startRow} and #{lastRow} 
  	
  	</select>
  	
  	
 
<update parameterType="MemberVO" id="memberUpdate">
Update member set email=#{email},phone=#{phone},age=#{age} where id=#{id} 
</update>


<delete parameterType="MemberVO" id="memberDelete">
delete member where id=#{id} 
</delete>

<delete id="memberDeletes" parameterType="List">
	delete member where id in
	<foreach collection="list" item="id" open="(" close=")" separator=",">
		#{id}
	</foreach>
</delete>

<insert parameterType="MemberVO" id="memberJoin">
insert into member values(#{id},#{pw},#{name},#{email},#{phone},#{age}) 
</insert>

<select parameterType="MemberVO" id="memberLogin" resultMap="loginResult">
select M.*,F.fileName, F.oriName
from member M left join memberFile F
on (M.id=F.id)
where M.id=#{id} and M.pw=#{pw}
</select>

<select id="memberIdCheck" parameterType="MemberVO" resultType="MemberVO">
	select id from member where id=#{id}
</select>

</mapper>